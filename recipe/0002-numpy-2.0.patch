diff -ruN --no-dereference genutil-8.2.1/setup.py genutil-8.2.1-patch/setup.py
--- genutil-8.2.1/setup.py	2020-07-17 15:17:22.000000000 -0600
+++ genutil-8.2.1-patch/setup.py	2024-10-25 16:13:15.413336571 -0600
@@ -20,7 +20,7 @@
     url="http://uvcdat.llnl.gov/software",
     packages=["genutil", "unidata"],
     package_dir={"genutil": "Lib", "unidata": "unidata"},
-    include_dirs=["Include", numpy.lib.utils.get_include()],
+    include_dirs=["Include", numpy.get_include()],
     ext_modules=[
         Extension("genutil.array_indexing", ["Src/array_indexing.c"]),
         Extension(
diff -ruN --no-dereference genutil-8.2.1/Src/array_indexing.c genutil-8.2.1-patch/Src/array_indexing.c
--- genutil-8.2.1/Src/array_indexing.c	2020-07-17 15:17:22.000000000 -0600
+++ genutil-8.2.1-patch/Src/array_indexing.c	2024-10-25 16:17:09.851372873 -0600
@@ -506,10 +506,10 @@
   if (!PyArg_ParseTuple(args,"OO",&input,&indices))
     return NULL;
   array=(PyArrayObject *)
-    PyArray_ContiguousFromObject(input,PyArray_NOTYPE,1,0);
+    PyArray_ContiguousFromObject(input,NPY_NOTYPE,1,0);
   if (array==NULL) return NULL;
   indices_array=(PyArrayObject *)
-    PyArray_ContiguousFromObject(indices,PyArray_INT,0,0);
+    PyArray_ContiguousFromObject(indices,NPY_INT,0,0);
   if (indices_array==NULL) {
     Py_DECREF(array);
     return NULL;}
@@ -543,28 +543,28 @@
       ioffset2=result->strides[0]*dim;
       ierr=0;
 /*       printf("dim,nloop,offset: %d, %d, %d\n",dim,nloop,ioffset); */
-      if (type_num==PyArray_FLOAT){
+      if (type_num==NPY_FLOAT){
 	ierr=extract_function_float(n1,n2,(float *)array->data,(int *)(indices_array->data+ioffset), (float *)(result->data+ioffset2));
       }
-      else if (type_num==PyArray_CHAR){
+      else if (type_num==NPY_CHAR){
 	ierr=extract_function_char(n1,n2,array->data,(int *)indices_array->data+ioffset, (result->data+ioffset2));
       }
-      else if (type_num==PyArray_UBYTE){
+      else if (type_num==NPY_UBYTE){
 	ierr=extract_function_uchar(n1,n2,(unsigned char *)array->data,(int *)(indices_array->data+ioffset),(unsigned char *)(result->data+ioffset2));
       }
-      else if (type_num==PyArray_BYTE){
+      else if (type_num==NPY_BYTE){
 	ierr=extract_function_schar(n1,n2,(signed char *)array->data,(int *)(indices_array->data+ioffset),(signed char *)(result->data+ioffset2));
       }
-      else if (type_num==PyArray_SHORT){
+      else if (type_num==NPY_SHORT){
 	ierr=extract_function_short(n1,n2,(short *)array->data,(int *)(indices_array->data+ioffset),(short *)(result->data+ioffset2));
       }
-      else if (type_num==PyArray_INT){
+      else if (type_num==NPY_INT){
 	ierr=extract_function_int(n1,n2,(int *)array->data,(int *)(indices_array->data+ioffset),(int *)(result->data+ioffset2));
       }
-      else if (type_num==PyArray_LONG){
+      else if (type_num==NPY_LONG){
 	ierr=extract_function_long(n1,n2,(long *)array->data,(int *)(indices_array->data+ioffset),(long *)(result->data+ioffset2));
       }
-      else if (type_num==PyArray_DOUBLE){
+      else if (type_num==NPY_DOUBLE){
 	ierr=extract_function_double(n1,n2,(double *)array->data,(int *)(indices_array->data+ioffset),(double *)(result->data+ioffset2));
       }
       else {
@@ -595,15 +595,15 @@
   if (!PyArg_ParseTuple(args,"OOO",&array,&indices,&values))
     return NULL;
   array_array=(PyArrayObject *)
-    PyArray_ContiguousFromObject(array,PyArray_NOTYPE,1,0);
+    PyArray_ContiguousFromObject(array,NPY_NOTYPE,1,0);
   if (array_array==NULL) return NULL;
   indices_array=(PyArrayObject *)
-    PyArray_ContiguousFromObject(indices,PyArray_INT,0,0);
+    PyArray_ContiguousFromObject(indices,NPY_INT,0,0);
   if (indices_array==NULL) {
     Py_DECREF(array_array);
     return NULL;}
   values_array=(PyArrayObject *)
-    PyArray_ContiguousFromObject(values,PyArray_NOTYPE,0,0);
+    PyArray_ContiguousFromObject(values,NPY_NOTYPE,0,0);
   if (values_array==NULL) {
     Py_DECREF(array_array);
     Py_DECREF(indices_array);
@@ -663,28 +663,28 @@
 	ioffset = 0;
       }
       ierr=0;
-      if (type_num==PyArray_FLOAT){
+      if (type_num==NPY_FLOAT){
 	ierr=set_function_float(n1,n2,(float *)array_array->data,(int *)(indices_array->data+ioffset), (float *)(values_array->data+aoffset));
       }
-      else if (type_num==PyArray_CHAR){
+      else if (type_num==NPY_CHAR){
 	ierr=set_function_char(n1,n2,array_array->data,(int *)indices_array->data+ioffset, values_array->data+aoffset);
       }
-      else if (type_num==PyArray_UBYTE){
+      else if (type_num==NPY_UBYTE){
 	ierr=set_function_uchar(n1,n2,(unsigned char *)array_array->data,(int *)(indices_array->data+ioffset),(unsigned char *)(values_array->data+aoffset));
       }
-      else if (type_num==PyArray_BYTE){
+      else if (type_num==NPY_BYTE){
 	ierr=set_function_schar(n1,n2,(signed char *)array_array->data,(int *)(indices_array->data+ioffset),(signed char *)(values_array->data+aoffset));
       }
-      else if (type_num==PyArray_SHORT){
+      else if (type_num==NPY_SHORT){
 	ierr=set_function_short(n1,n2,(short *)array_array->data,(int *)(indices_array->data+ioffset),(short *)(values_array->data+aoffset));
       }
-      else if (type_num==PyArray_INT){
+      else if (type_num==NPY_INT){
 	ierr=set_function_int(n1,n2,(int *)array_array->data,(int *)(indices_array->data+ioffset),(int *)(values_array->data+aoffset));
       }
-      else if (type_num==PyArray_LONG){
+      else if (type_num==NPY_LONG){
 	ierr=set_function_long(n1,n2,(long *)array_array->data,(int *)(indices_array->data+ioffset),(long *)(values_array->data+aoffset));
       }
-      else if (type_num==PyArray_DOUBLE){
+      else if (type_num==NPY_DOUBLE){
 	ierr=set_function_double(n1,n2,(double *)array_array->data,(int *)(indices_array->data+ioffset),(double *)(values_array->data+aoffset));
       }
       else {
@@ -734,10 +734,10 @@
   if (!PyArg_ParseTuple(args,"OO",&array,&indices))
     return NULL;
   array_array=(PyArrayObject *)
-    PyArray_ContiguousFromObject(array,PyArray_FLOAT32,1,0);
+    PyArray_ContiguousFromObject(array,NPY_FLOAT32,1,0);
   if (array_array==NULL) return NULL;
   indices_array=(PyArrayObject *)
-    PyArray_ContiguousFromObject(indices,PyArray_INT32,0,0);
+    PyArray_ContiguousFromObject(indices,NPY_INT32,0,0);
   if (indices_array==NULL) {
     Py_DECREF(array_array);
     return NULL;}
